#Packages
install.packages("tidyverse")
install.packages("dplyr")
install.packages("magrittr")
install.packages("caret")
install.packages("plyr")
install.packages("rattle")
install.packages("gapminder")
install.packages("R.devices")
install.packages("RWeka")
install.packages("rpart.plot")
install.packages("RGtk2")
install.packages("rattle")
install.packages("factoextra")
install.packages("gridExtra")
install.packages("animation")
install.packages("ggfortify")
# libraries
library(dplyr)
library(rpart)
library(rpart.plot)
library(rattle)
library(ggplot2)
library(RColorBrewer)
library(ggfortify)
library(vcd)
library(caret)
require(corrplot)
library(magrittr)
library(lubridate)
library(tidyverse)
library(cluster)
library(factoextra)
library(gridExtra)
library(stats)
library(class)
library(plyr)
#seed
set.seed(1)
set.seed(28)
set.seed(678)
set.seed(123)
data<- read.csv("train.csv")
data <- rename(data, awards_won = awards_won.)
data<- read.csv("train.csv")
data <- rename(data, awards_won = awards_won.)
data<- read.csv("train.csv")
data <- rename(data, awards_won = awards_won.)
data<- read.csv("train.csv")
data <- rename(data, awards_won = awards_won.)
data<- read.csv("train.csv")
data %>% rename (awards_wonca = awards_won.)
data<- read.csv("train.csv")
data %>% rename (awards_wonc = awards_won.)
#Packages
install.packages("tidyverse")
install.packages("dplyr")
install.packages("magrittr")
install.packages("caret")
install.packages("plyr")
install.packages("rattle")
install.packages("gapminder")
data<- read.csv("train.csv")
data %>% rename (awards_wonc = awards_won.)
#Packages
# libraries
library(dplyr)
library(rpart)
library(rpart.plot)
library(rattle)
library(ggplot2)
library(RColorBrewer)
library(ggfortify)
library(vcd)
library(caret)
require(corrplot)
library(magrittr)
library(lubridate)
library(tidyverse)
library(cluster)
library(factoextra)
library(gridExtra)
library(stats)
library(class)
library(plyr)
#seed
set.seed(28)
data<- read.csv("train.csv")
data <- rename(data, awards_won = awards_won.)
data<- read.csv("train.csv")
head(data)
colnames(data)
attach(data)
data<- read.csv("train.csv")
head(data)
colnames(data)
attach(data)
str(data)
dim(data)
object.size(data)/1024 #KB
object.size(data)/1024^2 #MB
object.size(data)/1024^3 #GB
print(paste("Número de valores faltantes totales:", sum(is.na(data))))
data <- na.omit(data)
data <- unique(data)
datajose <- data
dep_levels <- unique(datajose$department)
gen_levels <- unique(datajose$gender)
recru_levels <- unique(datajose$recruitment_channel)
promo_levels <- unique(datajose$is_promoted )
award_levels <- unique(datajose$awards_won)
datajose$department <- factor(datajose$department, levels = dep_levels)
datajose$gender  <- factor(datajose$gender , levels = gen_levels)
datajose$recruitment_channel <- factor(datajose$recruitment_channel, levels = recru_levels)
datajose$is_promoted <- factor(datajose$is_promoted, levels = promo_levels)
datajose$awards_won <- factor(datajose$awards_won, levels = award_levels)
datajosepred <-datajose
division <- createDataPartition(datajosepred$is_promoted, p = .7, list = FALSE, times = 1)
train <- datajosepred[division, ]
test  <- datajosepred[-division, ]
arbol <- rpart(formula =  is_promoted  ~ ., data = train, method = 'class')
fancyRpartPlot(arbol)
prediccion <-predict(arbol, test, type = "class")
valcruz <- trainControl(method = "cv", number = 10)
arbolfit <- train(is_promoted ~ ., data = train, method = "rpart",
trControl = valcruz, tuneLength = 10)
rpart.plot(arbolfit$finalModel, type = 2, extra = 1)
prp(arbolfit$finalModel, type = 2, nn = TRUE,
fallen.leaves = FALSE,
varlen = 0,  shadow.col = "gray")
prediccionTest <- predict(arbolfit, newdata = test)
confusionMatrix(prediccionTest, test$is_promoted)
datajosegraficas <- datajose
ggplot(data = datajosegraficas, aes(x = education, fill = is_promoted)) +
geom_bar(position = "dodge") +
labs(title = "Promocionado según estudios",
x = "Nivel de estudios",
y = "Total",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = awards_won, fill = is_promoted)) +
geom_bar(position = "stack") +
labs(title = "Promovido por premios ganados",
x = "Premio",
y = "Total",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = department, fill = is_promoted)) +
geom_bar(position = "stack") +
labs(title = "Promocionado según departamento",
x = "Departamento",
y = "Total",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = gender, fill = is_promoted)) +
geom_bar(position = "stack") +
labs(title = "Promovido por géneros",
x = "Géneros",
y = "Total",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = age, fill = is_promoted)) +
geom_density(alpha = 0.5) +
labs(title = "Promovido según edad",
x = "Edad",
y = "Densidad",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = is_promoted, fill = factor(previous_year_rating))) +
geom_bar(position = "stack") +
labs(x = "Promovido", y = "Número de empleados") +
ggtitle("Gráfico de barras apiladas para la variable 'previous_year_rating'")
ggplot(data = datajosegraficas, aes(x = is_promoted, y = avg_training_score)) +
geom_boxplot() +
labs(x = "Promovido", y = "Puntuación de entrenamiento promedio") +
ggtitle("Gráfico de cajas y bigotes para la variable 'avg_training_score'")
data_Salama <- read.csv ("train.csv")
head(data_Salama,5)
ep_PC=data_Salama[,c("no_of_trainings", "age", "previous_year_rating", "length_of_service", "avg_training_score")]
epc=cor(na.omit(ep_PC))
epc
pca <- princomp(epc)
pca
print(cumsum(pca$sdev^2)/sum(pca$sdev^2))
#Packages
install.packages("tidyverse")
install.packages("dplyr")
install.packages("magrittr")
install.packages("caret")
install.packages("plyr")
install.packages("rattle")
install.packages("gapminder")
install.packages("R.devices")
install.packages("RWeka")
install.packages("rpart.plot")
install.packages("RGtk2")
install.packages("rattle")
install.packages("factoextra")
install.packages("gridExtra")
install.packages("animation")
install.packages("ggfortify")
# libraries
library(dplyr)
library(rpart)
library(rpart.plot)
library(rattle)
library(ggplot2)
library(RColorBrewer)
library(ggfortify)
library(vcd)
library(caret)
require(corrplot)
library(magrittr)
library(lubridate)
library(tidyverse)
library(cluster)
library(factoextra)
library(gridExtra)
library(stats)
library(class)
library(plyr)
#seed
set.seed(28)
data<- read.csv("train.csv")
data <- rename(data, awards_won = awards_won.)
data<- read.csv("train.csv")
head(data)
colnames(data)
attach(data)
str(data)
dim(data)
object.size(data)/1024 #KB
object.size(data)/1024^2 #MB
object.size(data)/1024^3 #GB
print(paste("Número de valores faltantes totales:", sum(is.na(data))))
data <- na.omit(data)
data <- unique(data)
datajose <- data
dep_levels <- unique(datajose$department)
gen_levels <- unique(datajose$gender)
recru_levels <- unique(datajose$recruitment_channel)
promo_levels <- unique(datajose$is_promoted )
award_levels <- unique(datajose$awards_won)
datajose$department <- factor(datajose$department, levels = dep_levels)
datajose$gender  <- factor(datajose$gender , levels = gen_levels)
datajose$recruitment_channel <- factor(datajose$recruitment_channel, levels = recru_levels)
datajose$is_promoted <- factor(datajose$is_promoted, levels = promo_levels)
datajose$awards_won <- factor(datajose$awards_won, levels = award_levels)
datajosepred <-datajose
division <- createDataPartition(datajosepred$is_promoted, p = .7, list = FALSE, times = 1)
train <- datajosepred[division, ]
test  <- datajosepred[-division, ]
arbol <- rpart(formula =  is_promoted  ~ ., data = train, method = 'class')
fancyRpartPlot(arbol)
prediccion <-predict(arbol, test, type = "class")
valcruz <- trainControl(method = "cv", number = 10)
arbolfit <- train(is_promoted ~ ., data = train, method = "rpart",
trControl = valcruz, tuneLength = 10)
rpart.plot(arbolfit$finalModel, type = 2, extra = 1)
prp(arbolfit$finalModel, type = 2, nn = TRUE,
fallen.leaves = FALSE,
varlen = 0,  shadow.col = "gray")
prediccionTest <- predict(arbolfit, newdata = test)
confusionMatrix(prediccionTest, test$is_promoted)
datajosegraficas <- datajose
ggplot(data = datajosegraficas, aes(x = education, fill = is_promoted)) +
geom_bar(position = "dodge") +
labs(title = "Promocionado según estudios",
x = "Nivel de estudios",
y = "Total",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = awards_won, fill = is_promoted)) +
geom_bar(position = "stack") +
labs(title = "Promovido por premios ganados",
x = "Premio",
y = "Total",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = department, fill = is_promoted)) +
geom_bar(position = "stack") +
labs(title = "Promocionado según departamento",
x = "Departamento",
y = "Total",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = gender, fill = is_promoted)) +
geom_bar(position = "stack") +
labs(title = "Promovido por géneros",
x = "Géneros",
y = "Total",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = age, fill = is_promoted)) +
geom_density(alpha = 0.5) +
labs(title = "Promovido según edad",
x = "Edad",
y = "Densidad",
fill = "Promovido") +
theme_bw()
ggplot(data = datajosegraficas, aes(x = is_promoted, fill = factor(previous_year_rating))) +
geom_bar(position = "stack") +
labs(x = "Promovido", y = "Número de empleados") +
ggtitle("Gráfico de barras apiladas para la variable 'previous_year_rating'")
ggplot(data = datajosegraficas, aes(x = is_promoted, y = avg_training_score)) +
geom_boxplot() +
labs(x = "Promovido", y = "Puntuación de entrenamiento promedio") +
ggtitle("Gráfico de cajas y bigotes para la variable 'avg_training_score'")
data_Salama <- read.csv ("train.csv")
head(data_Salama,5)
ep_PC=data_Salama[,c("no_of_trainings", "age", "previous_year_rating", "length_of_service", "avg_training_score")]
epc=cor(na.omit(ep_PC))
epc
pca <- princomp(epc)
pca
print(cumsum(pca$sdev^2)/sum(pca$sdev^2))
